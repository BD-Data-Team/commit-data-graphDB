# vertices creation
CREATE VERTEX GitContributor (PRIMARY_ID email STRING, name STRING) WITH primary_id_as_attribute="true"
CREATE VERTEX GitRepository (PRIMARY_ID name STRING, watch_count UINT) WITH primary_id_as_attribute="true"
CREATE VERTEX GitLanguage (PRIMARY_ID name STRING) WITH primary_id_as_attribute="true"
CREATE VERTEX GitLicense (PRIMARY_ID name STRING) WITH primary_id_as_attribute="true"
CREATE VERTEX GitCommit (PRIMARY_ID id STRING, title STRING, message STRING) WITH primary_id_as_attribute="true"
CREATE VERTEX GitFile (PRIMARY_ID id STRING, reference STRING, path STRING, mode UINT, symlink_target STRING)  WITH primary_id_as_attribute="true"

# edges creation
CREATE DIRECTED EDGE AUTHOR (From GitContributor, To GitCommit, ts UINT)
CREATE DIRECTED EDGE COMMITTED (From GitContributor, To GitCommit, ts UINT)
CREATE DIRECTED EDGE PARENT (From GitCommit, To GitCommit)
CREATE DIRECTED EDGE BELONGS_TO (From GitCommit, To GitRepository) 
CREATE DIRECTED EDGE WRITTEN_IN (From GitRepository, To GitLanguage, bytes UINT)
CREATE DIRECTED EDGE HAS (From GitRepository, To GitLicense)
CREATE DIRECTED EDGE STAYS_IN (From GitFile, To GitRepository)

# graph creation
CREATE GRAPH Git (GitContributor, GitCommit, GitRepository, GitLanguage, GitFile, GitLicense, AUTHOR, COMMITTED, PARENT, BELONGS_TO, WRITTEN_IN, HAS, STAYS_IN)